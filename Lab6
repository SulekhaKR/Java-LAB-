import java.util.Scanner;

public class CoinCombinations {
    // Function to find the number of ways to make 'sum' using given coins
    public static int countWaysToMakeSum(int[] coins, int sum) {
        // DP array to store the number of ways to make each sum from 0 to 'sum'
        int[] dp = new int[sum + 1];
       
        // There's one way to make sum 0: by not choosing any coins
        dp[0] = 1;
       
        // Loop through each coin
        for (int coin : coins) {
            // Update the dp array for all sums that can include this coin
            for (int i = coin; i <= sum; i++) {
                dp[i] += dp[i - coin];
            }
        }
       
        // The value at dp[sum] will be the number of ways to make 'sum'
        return dp[sum];
    }
   
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Get the number of coins from the user
        System.out.print("Enter the number of coins: ");
        int n = scanner.nextInt();

        // Get the coin values from the user
        int[] coins = new int[n];
        System.out.println("Enter the coin values:");
        for (int i = 0; i < n; i++) {
            coins[i] = scanner.nextInt();
        }

        // Get the sum from the user
        System.out.print("Enter the target sum: ");
        int sum = scanner.nextInt();

        // Calculate and display the number of ways to make the sum
        int ways = countWaysToMakeSum(coins, sum);
        System.out.println("Number of ways to make sum " + sum + " with coins " + java.util.Arrays.toString(coins) + ": " + ways);

        scanner.close();
    }
}
